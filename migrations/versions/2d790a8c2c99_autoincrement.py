"""autoincrement

Revision ID: 2d790a8c2c99
Revises: 6bbea86fd57b
Create Date: 2025-10-11 17:20:05.154294
"""
from typing import Sequence, Union
from alembic import op
import sqlalchemy as sa

revision: str = '2d790a8c2c99'
down_revision: Union[str, None] = '6bbea86fd57b'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None

def upgrade() -> None:
    op.execute("""
    DO $$
    DECLARE fk_name text;
    BEGIN
        SELECT tc.constraint_name INTO fk_name
        FROM information_schema.table_constraints tc
        JOIN information_schema.key_column_usage kcu
             ON tc.constraint_name = kcu.constraint_name
            AND tc.table_schema = kcu.table_schema
        WHERE tc.table_name='price_history'
          AND tc.constraint_type='FOREIGN KEY'
          AND kcu.column_name='item_id'
        LIMIT 1;
        IF fk_name IS NOT NULL THEN
            EXECUTE format('ALTER TABLE price_history DROP CONSTRAINT %I', fk_name);
        END IF;
    END$$;
    """)

    op.execute("""
    ALTER TABLE items
        ALTER COLUMN id TYPE BIGINT;
    """)

    op.execute("""
    DO $$
    BEGIN
        IF NOT EXISTS (
            SELECT 1 FROM information_schema.columns
            WHERE table_name='items' AND column_name='id' AND is_identity='YES'
        ) THEN
            ALTER TABLE items ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY;
        END IF;
    END$$;
    """)

    # Синхронизируем sequence для items.id
    op.execute("""
    DO $$
    DECLARE seq_name text;
    DECLARE max_id bigint;
    BEGIN
        SELECT coalesce(max(id),0) INTO max_id FROM items;
        SELECT c.relname INTO seq_name
        FROM pg_class c
        JOIN pg_depend d ON d.objid = c.oid
        JOIN pg_class t ON d.refobjid = t.oid
        JOIN pg_attribute a ON a.attrelid = t.oid AND a.attnum = d.refobjsubid
        WHERE c.relkind='S' AND t.relname='items' AND a.attname='id'
        LIMIT 1;
        IF seq_name IS NOT NULL THEN
            EXECUTE format('SELECT setval(%L, %s, true)', seq_name, max_id);
        END IF;
    END$$;
    """)

    op.execute("""
    ALTER TABLE price_history
        ALTER COLUMN id TYPE BIGINT;
    """)

    op.execute("""
    DO $$
    BEGIN
        IF NOT EXISTS (
            SELECT 1 FROM information_schema.columns
            WHERE table_name='price_history' AND column_name='id' AND is_identity='YES'
        ) THEN
            ALTER TABLE price_history ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY;
        END IF;
    END$$;
    """)

    # Синхронизация sequence для price_history.id
    op.execute("""
    DO $$
    DECLARE seq_name text;
    DECLARE max_id bigint;
    BEGIN
        SELECT coalesce(max(id),0) INTO max_id FROM price_history;
        SELECT c.relname INTO seq_name
        FROM pg_class c
        JOIN pg_depend d ON d.objid = c.oid
        JOIN pg_class t ON d.refobjid = t.oid
        JOIN pg_attribute a ON a.attrelid = t.oid AND a.attnum = d.refobjsubid
        WHERE c.relkind='S' AND t.relname='price_history' AND a.attname='id'
        LIMIT 1;
        IF seq_name IS NOT NULL THEN
            EXECUTE format('SELECT setval(%L, %s, true)', seq_name, max_id);
        END IF;
    END$$;
    """)

    op.execute("""
    ALTER TABLE price_history
        ALTER COLUMN item_id TYPE BIGINT;
    """)

    op.execute("""
    ALTER TABLE price_history
        ADD CONSTRAINT price_history_item_id_fkey
        FOREIGN KEY (item_id) REFERENCES items(id) ON DELETE CASCADE;
    """)

def downgrade() -> None:
    op.execute("ALTER TABLE price_history DROP CONSTRAINT IF EXISTS price_history_item_id_fkey;")
    op.execute("""
    DO $$
    BEGIN
        IF EXISTS (
            SELECT 1 FROM information_schema.columns
            WHERE table_name='price_history' AND column_name='id' AND is_identity='YES'
        ) THEN
            ALTER TABLE price_history ALTER COLUMN id DROP IDENTITY IF EXISTS;
        END IF;
    END$$;
    """)
    op.execute("""
    DO $$
    BEGIN
        IF EXISTS (
            SELECT 1 FROM information_schema.columns
            WHERE table_name='items' AND column_name='id' AND is_identity='YES'
        ) THEN
            ALTER TABLE items ALTER COLUMN id DROP IDENTITY IF EXISTS;
        END IF;
    END$$;
    """)
    op.execute("ALTER TABLE price_history ALTER COLUMN item_id TYPE INTEGER;")
    op.execute("ALTER TABLE price_history ALTER COLUMN id TYPE INTEGER;")
    op.execute("ALTER TABLE items ALTER COLUMN id TYPE INTEGER;")
    op.execute("""
    ALTER TABLE price_history
        ADD CONSTRAINT price_history_item_id_fkey
        FOREIGN KEY (item_id) REFERENCES items(id) ON DELETE CASCADE;
    """)
